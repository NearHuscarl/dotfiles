#!/bin/bash
# ============================================================================
# File:        alias
# Description: Bash custom aliases and other alias functions, some alias have
#              the equivalent completion as the original commands
# Author:      Near Huscarl <near.huscarl@gmail.com>
# Last Change: Thu Apr 05 07:16:41 +07 2018
# Licence:     BSD 3-Clause license
# Note:        N/A
# ============================================================================

# {{{ alias functions
function notify() { # {{{
	local icon="$1" title="$2" message="$3"
	nohup notify-send --icon="$HOME/.icons/dunst/$icon" "$title" "$message" 1>/dev/null
}
# }}}
function alias_tree() { # {{{
   local pwd=${1:-$(pwd)}
   find "$pwd" -print | sed -e 's;'"$pwd"';\.;g;s;[^/]*\/;|__;g;s;__|; |;g'
} # }}}
function alias_paci() { # {{{
   pacfzf -S "$@"
   pacmerge
	paccache --remove --keep 3
	pacfzf --cache o
}
# }}}
function alias_pacu() { # {{{
	sudo pacman -Syu "$@"
	notify 'archlinux.png' 'pacman' 'Package(s) updated'
	pacmerge
	paccache --remove --keep 3
	pacfzf --cache o
}
# }}}
function alias_pacr() { # {{{
	pacfzf -Rs "$@"
	pacfzf --cache o
}
# }}}
function alias_pacdesc() { # {{{
	pacfzf -Qi "$1" | awk -F ': ' '/Description/ {print $2}'
}
# }}}
function alias_pacDesc() { # {{{
	pacfzf -Si "$1" | awk -F ': ' '/Description/ {print $2}'
}
# }}}
function alias_paclatest() { # {{{
	max_pkgs="${1:-20}"
	expac -HM --timefmt="%Y-%m-%d %T" '%l\t%-20n\t%m' | sort | tail -n "$max_pkgs"
}
# }}}
function alias_paclatest-explicit() { # {{{
	# list nth last explicitly installed packages which is not in base/base-devel group
	maxpkgs="${1:-20}"
	explicit_pkgs=$(comm -23 <(pacman -Qqe | sort) <(pacman -Qqg base base-devel | sort))
	expac -HM --timefmt='%Y-%m-%d %T' '%l\t%-20n\t%m' "$explicit_pkgs"  | sort | tail -n "$maxpkgs"
}
# }}}
function alias_pacsize() { # {{{
	expac -S -HM '%k\t%n' | sort -n | tail -n "${1:-20}"
}
# }}}
function alias_pacdep() { # {{{
	pacfzf -Qi "$1" | awk -F'[:<=>]' '/^Depends/ {print $2}' | xargs -n1 | sort -u
}
# }}}
function alias_auri() { # {{{
   pacfzf -Sa "$@"
   pacmerge
	paccache --remove --keep 3
	pacfzf --cache a
}
# }}}
function alias_auru() { # {{{
	trizen -Syua "$@"
	notify 'archlinux.png' 'AUR' 'Package(s) updated'
	pacmerge
	paccache --remove --keep 3
	pacfzf --cache a
}
# }}}
function alias_aurr() { # {{{
	pacfzf -Rsa "$@"
	pacfzf --cache a
}
# }}}
function alias_aurdesc() { # {{{
	pacfzf -Qia "$1" | awk -F ': ' '/Description/ {print $2}'
}
# }}}
function alias_aurDesc() { # {{{
	pacfzf -Sia "$1" | awk -F ': ' '/Description/ {print $2}'
}
# }}}
function alias_aursize() { # {{{
   pacfzf -Qia "$@" | grep "Installed Size" | sed -e "s/^Installed Size.*://"
}
# }}}
function alias_aurdep() { # {{{
	pacfzf -Qia "$1" | awk -F'[:<=>]' '/^Depends/ {print $2}' | xargs -n1 | sort -u
}
# }}}
function alias_pic() { # {{{
	shopt -s nullglob

	# picture extensions
	local pic_ext="(jpg|png)"

	# get all *.(jpg|png) of current path
	local paths=("$(pwd)"/*.@"$pic_ext")
	echo "$paths"

	# remove $(pwd) prefix, only keep file names
	paths=("${paths[@]#"$pwd/"}")

	for i in "${!paths[@]}"; do
		if [[ "${paths[$i]}" == "$1" ]]; then
			# open sxiv in 
			# (s)cale mode: (h)eight
			# hide (b)ottom info
			# search dirs (r)ecursively for images
			# open at pic (n)umber <NUM> which is the selected picture
			sxiv -s h -b -n "$((i+1))" *.@$pic_ext
			shopt -u nullglob
			return 0
		fi
	done
} # }}}
# }}}
# color {{{
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ls="ls --color=auto"
# }}}
# change directory {{{
alias cdt='cd $HOME/Desktop'
alias cdh='cd $HOME'
alias cdp='cd $HOME/Pictures'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
# }}}
# ls {{{
alias  la='ls --color=auto -A'
alias  ll='ls --color=auto -oh'
alias lla='ls --color=auto -ohA'
alias lss='ls -A   | grep --color=auto -iP'
alias lls='ls -Aoh | grep --color=auto -iP'
alias tree='alias_tree'
# }}}
# vim {{{
if [[ -x /usr/bin/vim ]]; then
	alias view='vim -R'
	alias vim0='vim -u NONE -N'
	alias vimrc='vim $HOME/.vim/vimrc'
	alias nvim-startup='nvim -c q --startuptime /tmp/nvim.log && tail -n1 $_'
	alias nvim-Startup='nvim -c q --startuptime /tmp/nvim.log && nvim $_'
	alias vim-startup='vim -c q --startuptime /tmp/vim.log && tail -n1 $_'
	alias vim-Startup='vim -c q --startuptime /tmp/vim.log && vim $_'
	# vir in $HOME/bin/vir
	if [[ -x ~/bin/viman ]]; then
		alias man='viman'
	fi
fi
# }}}
# pacman {{{
if [[ -x /usr/bin/pacman ]]; then
	alias paci='alias_paci'
	alias pacu='alias_pacu'
	alias pacr='alias_pacr'
	alias pacs='pacfzf -Qsq'
	alias pacS='pacfzf -Ssq'
	alias pacinfo='pacfzf -Qi'
	alias pacInfo='pacfzf -Si'
	alias paclist='pacfzf -Ql'
	alias pacdesc='alias_pacdesc'
	alias pacDesc='alias_pacDesc'
	alias pacsize='alias_pacsize'                              # Show download size of largest package(s)
	alias paclatest='alias_paclatest'                          # List nth last installed packages
	alias paclatest-explicit='alias_paclatest-explicit'        # List nth last explicitly installed packages which is not in base/base-devel group
	alias pacdep='alias_pacdep'                                # Print package's dependencies
	alias pacorphan='sudo pacman -Rns $(pacman -Qtdq)'         # Remove unused packages (orphans)

	# AUR
	alias auri='alias_auri'
	alias auru='alias_auru'
	alias aurr='alias_aurr'
	alias aurs='pacfzf -Qsqa'
	alias aurS='pacfzf -Ssqa'
	alias aurinfo='pacfzf -Sia'
	alias aurInfo='pacfzf -Sia'
	alias aurlist='pacfzf -Qla'
	alias aurdesc='alias_aurdesc'
	alias aurDesc='alias_aurDesc'
	alias aursize='alias_aursize'
	alias aurdep='alias_aurdep'
fi
# }}}
# git {{{
if [[ -x /usr/bin/git ]]; then
	alias git-log='git log --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit' # git log + formatting
fi
# }}}
# trash-cli {{{
if [[ -x /usr/bin/trash-put ]]; then
	alias rm='trash-put'
fi
# }}}
# picture {{{
if [[ -x /usr/bin/nitrogen ]]; then
	alias wallpaper='nitrogen --random --set-scaled "$HOME/Pictures/low_poly"'
fi
if [[ -x /usr/bin/sxiv ]]; then
	alias thumnail='sxiv -f -t -b -r *'
	alias sxiv='sxiv -b -s h'
	alias pic='alias_pic' # TODO: broken on KDE
fi
# }}}
# other {{{
alias bigfiles='sudo find / -type f -size +50M -exec du -ahx {} \; 2>/dev/null | sort -rh | head -n 10' # list top 10 files that is over 50Mb
alias man='manfzf -vc'
alias rtm='killall -USR1 termite' # reload termite config
alias xmod='xmodmap ~/.Xmodmap'
alias xres='xrdb ~/.Xresources'
alias reboot='shutdown -r now'
alias size='du -h --max-depth ' # list space of current path with argument is max depth
alias mkdir='mkdir -pv'
if [[ -x ~/usr/bin/vtop ]]; then
	alias top='vtop'
fi
alias json='python -m json.tool'
alias battery='upower --show-info $(upower --enumerate | grep BAT) | grep --color=never -E "state|to full|to empty|percentage" | sed "s/^\s*//"'
# }}}
# even shorter aliases {{{
alias r='fc -s'
alias e='exit'
alias c='clear'
alias sb='source $HOME/.bashrc'
# }}}
# apply completion to aliases {{{

# complete -p <command> -> show completion function of that command
# note: if not work. try to source the completion script first by typing the original
# command, then <tab> to trigger to script, and try again

if [ -d /usr/share/bash-completion/completions ]; then
	# Setup {{{
	completionPath='/usr/share/bash-completion/completions'

	# source $completionPath/pacman (_completion_loader pacman works too)
	# _completion_loader pacman
	source $completionPath/pacman
	source "$HOME"/bin/completion-utils.sh
	# }}}
	# pacman {{{
	complete -o default -F _pacman_S pac-install
	complete -o default -F _pacman_Q pac-remove
	complete -o default -F _pacman_Q pac-search
	complete -o default -F _pacman_S pac-Search
	complete -o default -F _pacman_Q pac-list
	complete -o default -F _pacman_S pac-info
	complete -o default -F _pacman_S pac-desc
	complete -o default -F _pacman_S pac-size
	complete -o default -F _pacman_S pac-dep

	complete -o default -F _pacman_S aur-install
	complete -o default -F _pacman_Q aur-remove
	complete -o default -F _pacman_Q aur-search
	complete -o default -F _pacman_Q aur-info
	complete -o default -F _pacman_Q aur-desc
	complete -o default -F _pacman_Q aur-size
	complete -o default -F _pacman_Q aur-dep
	# }}}
fi

# }}}

# vim: foldmethod=marker
