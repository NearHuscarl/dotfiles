snippet license "LICENSE" b
" ============================================================================
" File:        `!v expand("%:t")`
" Description: ${1:Description}
" Author:      Near Huscarl <near.huscarl@gmail.com>
" Last Change: `!v strftime("%a %b %d %H:%M:%S %Z %Y")`
" Licence:     ${2:BSD 3-Clause license}
" Note:        ${3:Note}
" ============================================================================
endsnippet

snippet "fa( (\S+))?" "autoload function" br
function! `!v substitute(substitute(expand('%:p:r'), '^.*autoload/', '', ''), '/', '#', 'g' )`#${1:`!p snip.rv = match.group(2) if match.group(2) is not None else 'FuncName'`} " {{{
	$2
endfunction
" }}}
endsnippet

snippet "f( (\S+))?" "function" br
function! `!p snip.rv = match.group(2) if match.group(2) is not None else ''`$1 " {{{
	$2
endfunction
" }}}
endsnippet

snippet "if( ([\S ]+))?" "if statement" br
if `!p snip.rv = match.group(2) if match.group(2) is not None else ''`
	$1
endif
endsnippet

snippet "ife(lse)?( ([\S ]+))?" "if-else statement" br
if `!p snip.rv = match.group(3) if match.group(3) is not None else ''`
	$1
else
	$2
endif
endsnippet

snippet "(ei|elif|elseif)( ([\S ]+))?" "elseif statement" br
elseif `!p snip.rv = match.group(3) if match.group(3) is not None else ''`
	$1
endsnippet

snippet "(Ei|Elif|Elseif)( ([\S ]+))?" "elseif statement with endif" br
elseif `!p snip.rv = match.group(3) if match.group(3) is not None else ''`
	$1
endif
endsnippet

snippet "for( ([\S ]+))?" "for loop" br
for `!p snip.rv = match.group(2) if match.group(2) is not None else 'i in range(0, 10)'`
	$1
endfor
endsnippet

snippet "while( ([\S ]+))?" "while loop" br
while `!p snip.rv = match.group(2) if match.group(2) is not None else '1'`
	$1
endwhile
endsnippet

snippet "aug(roup)?( (\S+))?" "augroup" br
augroup `!p snip.rv = match.group(3) if match.group(3) is not None else ''`
	autocmd!
	$1
augroup END
endsnippet

snippet fold "marker for folding" 
" {{{ ${1:Fold Name}
$2
" }}}
endsnippet
