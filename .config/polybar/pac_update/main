#!/bin/env bash

# Dependencies:
# - i3-quake
# - pacman
# - an AUR helper
# - newpkgs

RED="$(tput setaf 1 2> /dev/null)"
GREEN="$(tput setaf 2 2> /dev/null)"
RESET="$(tput sgr0 2> /dev/null)"

SCRIPT_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)/$(basename "${BASH_SOURCE[0]}")"

function prompt() { # {{{
	local prompt="$1"
	read -r -p "$prompt"
}
# }}}
function update() { # {{{
	local repo="$1"
	
	if [[ "$repo" == official ]]; then
		sudo pacman -Syu
	elif [[ "$repo" == aur ]]; then
		trizen -Syu
	fi
	prompt "${GREEN}Press any key to finish... ${RESET}"
}
# }}}
function list() { # {{{
	newpkgs --list
	prompt "${GREEN}Press any key to finish... ${RESET}"
}
# }}}
function i3_quake() { # {{{
	local command="$1"
	if command -v i3-quake > /dev/null 2>&1; then
			i3-quake -t "$TERMINAL" -p bottom "$command"
	else
		prompt "${RED}i3-quake${RESET} is required but not exists. Aborting..."
	fi
}
# }}}
function prompt_update() { # {{{
	local repo="$1"

	if [[ "$repo" == official ]]; then
		i3_quake "$SCRIPT_PATH --update-official"
	elif [[ "$repo" == aur ]]; then
		i3_quake "$SCRIPT_PATH --update-aur"
	fi
}
# }}}
function prompt_list() { # {{{
	i3_quake "$SCRIPT_PATH --list"
}
# }}}
function count() { # {{{
	local count pac_count aur_count

	count="$(newpkgs --count)"
	aur_count="$(echo "$count" | awk '{print $1}' | awk -F ':' '{print $2}')"
	pac_count="$(echo "$count" | awk '{print $2}' | awk -F ':' '{print $2}')"

	if ((pac_count + aur_count > 0)); then
		echo "$pac_count %{F$THEME_MAIN}%{F-} $aur_count"
	else
		echo "0 %{F$THEME_MAIN}%{F-} 0"
	fi
}
# }}}


action=${1:---print-count}

case "$action" in
	--update-official)
		update official
		;;
	--update-aur)
		update aur
		;;
	--list)
		list
		;;
	--print-count)
		count
		;;
	--prompt-update-official)
		prompt_update official
		;;
	--prompt-update-aur)
		prompt_update aur
		;;
	--prompt-new-pkgs)
		prompt_list
		;;
	*)
		;;
esac
