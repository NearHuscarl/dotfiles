#!/bin/bash
# ============================================================================
# File:        alias
# Description: Bash custom aliases and other alias functions, some alias have
#              the equivalent completion as the original commands
# Author:      Near Huscarl <near.huscarl@gmail.com>
# Last Change: Sat Sep 23 20:50:18 +07 2017
# Licence:     BSD 3-Clause license
# Note:        N/A
# ============================================================================

# Setup {{{
editor=vim

if [[ -f $HOME/bin/alias-utils ]]; then
   source $HOME/bin/alias-utils
fi
# }}}
# change directory {{{
alias dkt='cd $HOME/Desktop'
alias dot='cd $HOME/dotfiles'
alias cdh='cd $HOME'
alias cd-pic='cd $HOME/Pictures'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
# }}}
# list {{{
alias  ls="ls --color=auto"
alias  la="ls --color=auto -A"
alias  ll="ls --color=auto -oh"
alias lla="ls --color=auto -ohA"
alias  lr="ls --color=auto -R"
alias lss="ls -A    | grep --color=auto -i"
alias lls="ls -Aoh  | grep --color=auto -i"
alias lrs="ls -ARoh | grep --color=auto -i"
alias tree="alias-tree"
# }}}
# vim {{{
if [[ -x /usr/bin/vim ]]; then
   alias view="vim -R"
   alias vimrc="vim $HOME/.vimrc"
   alias vir='alias-vir'
   if [[ -x $HOME/bin/viman ]]; then
      alias man="viman"
   fi
fi
# }}}
# pacman {{{
if [[ -x /usr/bin/pacman ]]; then
   alias pac-install="alias-pac-install"
   alias pac-update="alias-pac-update"
   alias pac-remove="sudo pacman -Rs"
   alias pac-search="pacman -Qsq"
   alias pac-Search="pacman -Ssq"
   alias pac-orphan="sudo pacman -Rns $(pacman -Qtdq)"                                   # Remove unused packages (orphans)
   alias pac-info="pacman -Si"
   alias pac-desc="expac -S '%d'"
   alias pac-size="expac -S -HM '%k\t%n'"                                                # Show download size of package(s)
   alias pac-size-l="expac -S -HM '%k\t%n' | sort -n | tail -n"                          # Show nth largest download size of package(s)
   alias pac-latest="expac -HM --timefmt='%Y-%m-%d %T' '%l\t%-20n\t%m' | sort | tail -n" # List nth last installed packages
   alias pac-latest-e="alias-pac-latest-e"                                               # List nth last explicitly installed packages which is not in base/base-devel group
   alias pac-dep="alias-pac-dep"                                                         # Print package's dependencies

   # AUR
   if [[ -x /usr/bin/pacaur ]]; then
      alias aur-install="pacaur -Sa"
      alias aur-clean="pacaur -Sca"
      alias aur-update="pacaur -Syua"
      alias aur-remove="pacaur -Rsa"
      alias aur-search="pacaur -Qsqa"
      alias aur-Search="pacaur -Ssqa"
      alias aur-info="pacaur -Sia"
      alias aur-desc="alias-aur-desc"
      alias aur-size="alias-aur-size"
      alias aur-dep="alias-aur-dep"
   fi
fi
# }}}
# systemd {{{
if [[ -x /usr/bin/systemctl ]]; then
   alias sd-start="sudo systemctl start"
   alias sd-stop="sudo systemctl stop"
   alias sd-enable="sudo systemctl enable"
   alias sd-disable="sudo systemctl disable"
   alias sd-status="sudo systemctl status"
fi

if [[ -x /usr/bin/journalctl ]]; then
   alias sd-log="journalctl -b"
   alias sd-search="journalctl -b | grep"
   alias sd-clean="journalctl --vacuum-size=100M"
fi
# }}}
# git {{{
if [[ -x /usr/bin/git ]]; then
   alias gstat='git status'
   alias gadd='git add'
   alias gcommit="git commit"
   alias gCommit='git commit -a'
   alias gclone='git clone'
   alias glog='git log \
      --color \
      --graph \
      --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" \
      --abbrev-commit'
   alias glogstat='glog --stat'
   alias glogdiff='glog --stat -p'
   alias gschange='git log --patch -S'
   alias gscommit='git log --grep'
   alias gpull='git pull'
   alias gpush='git push'
   alias gfixcommit='git commit --amend'                     # Fix commit msg without altering its snapshot
   alias gfixstage='git commit --amend --reuse-message=HEAD' # Fix commit (staging other files)
   alias gunstage='git reset HEAD'
   alias grestore='git checkout --'
   alias gswitch='git checkout'
   alias gnewbranch='git checkout -b'
   alias gremove='git rm --cached'                           # Remove file in vcs while keeping in the local location
   alias gdelbranch='git branch -d'
   alias gdelremote='git push origin :'
   alias gmerge='git merge'

   # gdiff [num] where num is commit [num]nth
   if [[ -x /usr/bin/vim && -f $HOME/.vim/plugged/vim-fugitive/plugin/fugitive.vim ]]; then
      alias gdiff="alias-gdiff"
   else
      alias gdiff="alias-gdiff-old"
   fi
fi
# }}}
# trash-cli {{{
if [[ -x /usr/bin/trash-put ]]; then
   alias rm-hard="rm -I"
   alias rm="trash-put"
   alias rm-ls="trash-list"
   alias rm-ls-latest="trash-list | sort | tail -n"
   alias rm-search="trash-list | grep"
   alias rm-restore="trash-restore"
   alias rm-empty="trash-empty"
   alias rm-rm="trash-rm"
fi
# }}}
# Edit config file {{{
alias compton-conf="$editor $HOME/.config/compton.conf"
alias dunst-conf="$editor $HOME/.config/dunst/dunstrc"
alias i3-conf="$editor $HOME/.config/i3/config"
alias git-conf="$editor $HOME/.config/git/config"
alias neofetch-conf="$editor $HOME/.config/neofetch/config"
alias polybar-conf="$editor $HOME/.config/polybar/config"
alias mp-conf="$editor $HOME/.config/ncmpcpp/config"

alias alias-e="$editor $HOME/bin/alias"
alias bashrc="$editor $HOME/.bashrc"
alias inputrc="$editor $HOME/.inputrc"
alias gitignore="$editor $HOME/.gitignore"
alias todo="$editor $HOME/misc/Todo"
alias plan="$editor $HOME/misc/plan"
alias arch="$editor $HOME/misc/Arch.txt"
# }}}
# xprop {{{
alias xprop-class="xprop WM_CLASS"
alias xprop-role="xprop WM_WINDOW_ROLE"
alias xprop-title="xprop _NET_WM_NAME WM_NAME"
# }}}
# Picture {{{
alias wallpaper="nitrogen --random --set-scaled 'Pictures/Low Poly'"
alias pic-schedule="sxiv -f $HOME/Pictures/misc/schedule.png"
alias pic-full="sxiv -f"
alias thumnail="sxiv -f -t -b -r *"
alias pic="alias-pic"
alias sxiv="sxiv -b -s h"
# }}}
# Other {{{
alias sa='source $HOME/bin/alias'
alias sb='source $HOME/.bashrc && clear'
alias reboot='shutdown -r now'
alias shutoff='shutdown -h now'
alias size="alias-size"
alias size-l="alias-size-l"
alias mkdir='mkdir -pv'
if [[ -x /usr/bin/xfce4-terminal ]]; then
   alias term='xfce4-terminal'
fi
alias alsa-fix="sudo /usr/local/bin/alsa-fix.sh"
alias music="ncmpcpp"
alias clock="tty-clock -s -c -D -C6"
alias symlink="ln -s"
alias fuck='sudo $(history -p !!)'
alias arg="!*"
alias toggle-tray="alias-toggle-tray"
alias key-import='gpg --recv-keys'
# }}}
# Even shorter aliases {{{
alias e='exit'
alias c='clear'
# }}}
# Apply completion to aliases {{{

# complete -p <command> -> show completion function of that command
# note: if not work. try to source the completion script first by typing the original
# command, then <tab> to trigger to script, and try again

if [ -d /usr/share/bash-completion/completions ]; then
   # Setup {{{
   completionPath="/usr/share/bash-completion/completions"

   # source $completionPath/pacman (_completion_loader pacman works too)
   # _completion_loader pacman
   source $completionPath/pacman
   source $completionPath/journalctl
   source $completionPath/systemctl
   source $completionPath/git
   # source $completionPath/systemctl
   source $HOME/bin/completion-utils.sh
   source $HOME/bin/completion-wrapper.sh
   # }}}
   # pacman {{{
   complete -o default -F _pacman_S pac-install
   complete -o default -F _pacman_Q pac-remove
   complete -o default -F _pacman_Q pac-search
   complete -o default -F _pacman_S pac-Search
   complete -o default -F _pacman_S pac-info
   complete -o default -F _pacman_S pac-desc
   complete -o default -F _pacman_S pac-size
   complete -o default -F _pacman_S pac-dep

   complete -o default -F _pacman_S aur-install
   complete -o default -F _pacman_Q aur-remove
   complete -o default -F _pacman_Q aur-search
   complete -o default -F _pacman_Q aur-info
   complete -o default -F _pacman_Q aur-desc
   complete -o default -F _pacman_Q aur-size
   complete -o default -F _pacman_Q aur-dep
   # }}}
   # systemctl {{{
   completion-wrapper _systemctl _sd-start   systemctl start  1> /dev/null
   completion-wrapper _systemctl _sd-stop    systemctl stop   1> /dev/null
   completion-wrapper _systemctl _sd-enable  systemctl enable 1> /dev/null
   completion-wrapper _systemctl _sd-disable systemctl enable 1> /dev/null
   completion-wrapper _systemctl _sd-status  systemctl status 1> /dev/null

   complete -o default -F _sd-start   sd-start
   complete -o default -F _sd-stop    sd-stop
   complete -o default -F _sd-enable  sd-enable
   complete -o default -F _sd-disable sd-disable
   complete -o default -F _sd-status  sd-status

   complete -o default -F _journalctl sd-log
   # }}}
   # git {{{
   # git completion script already have its own function to set up completion
   # for functions or commands, so no need to use complete-wrapper function
   # see https://gist.github.com/JuggoPop/10706934
   __git_complete gstat      _git_status
   __git_complete gadd       _git_add
   __git_complete gcommit    _git_commit
   __git_complete glog       _git_log
   __git_complete glogstat   _git_log
   __git_complete glogdiff   _git_log
   __git_complete gpull      _git_pull
   __git_complete gpush      _git_push
   __git_complete gfixcommit _git_commit
   __git_complete gfixstage  _git_commit
   __git_complete gunstage   _git_reset
   __git_complete gswitch    _git_checkout
   __git_complete gnewbranch _git_branch
   __git_complete gmerge     _git_merge
   # __git_complete gdiff      _git_diff

   # __git_complete gdelbranch __gitcomp
   complete -o default -F _git_branch_d gdelbranch
   complete -o default -F _git_log_S gscommit
   # }}}
fi

# }}}
